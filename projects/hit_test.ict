{
  "notes": "***empty***",
  "libs": {
    "place": {},
    "keyboard": {}
  },
  "graphs": [],
  "types": [
    {
      "name": "one",
      "depth": 0,
      "oncreate": "this.myshape = 0;\nthis.ctype = 'one';\nct.rooms.current.one = this;",
      "onstep": "if (!this.shape) {\n    this.shape = ct.rooms.current.shapes[this.myshape];\n}\n\nif (ct.keyboard.pressed['up']) {\n    this.myshape += 1;\n    if (this.myshape > ct.rooms.current.shapes.length - 1) {\n        this.myshape = 0;\n    }\n    this.shape = ct.rooms.current.shapes[this.myshape];\n} else if (ct.keyboard.pressed['down']) {\n    this.myshape -= 1;\n    if (this.myshape < 0) {\n        this.myshape = ct.rooms.current.shapes.length - 1;\n    }\n    this.shape = ct.rooms.current.shapes[this.myshape];\n}\n\nthis.x = ct.mouse.x;\nthis.y = ct.mouse.y;",
      "ondraw": "if (ct.place.free(this,this.x,this.y,'two')) {\n    ct.x.fillStyle = '#0f0';\n} else {\n    ct.x.fillStyle = '#f00';\n}\n\nif (this.shape.type == 'rect') {\n    ct.draw.rect(this.x - this.shape.left,\n                 this.y - this.shape.top,\n                 this.x + this.shape.right,\n                 this.y + this.shape.bottom);\n} else if (this.shape.type == 'circle') {\n    ct.draw.circle(this.x,this.y, this.shape.r);\n} else {\n    ct.draw.circle(this.x,this.y, 2);\n} ",
      "ondestroy": "",
      "uid": 1,
      "graph": -1
    },
    {
      "name": "two",
      "depth": 0,
      "oncreate": "this.myshape = 0;\nthis.ctype = 'two';\nct.rooms.current.two = this;",
      "onstep": "if (!this.shape) {\n    this.shape = ct.rooms.current.shapes[this.myshape];\n}\n\nif (ct.keyboard.pressed['left']) {\n    this.myshape += 1;\n    if (this.myshape > ct.rooms.current.shapes.length - 1) {\n        this.myshape = 0;\n    }\n    this.shape = ct.rooms.current.shapes[this.myshape];\n} else if (ct.keyboard.pressed['right']) {\n    this.myshape -= 1;\n    if (this.myshape < 0) {\n        this.myshape = ct.rooms.current.shapes.length - 1;\n    }\n    this.shape = ct.rooms.current.shapes[this.myshape];\n}",
      "ondraw": "if (ct.place.free(this,this.x,this.y,'one')) {\n    ct.x.fillStyle = '#0f0';\n} else {\n    ct.x.fillStyle = '#f00';\n}\n\nif (this.shape.type == 'rect') {\n    ct.draw.rect(this.x - this.shape.left,\n                 this.y - this.shape.top,\n                 this.x + this.shape.right,\n                 this.y + this.shape.bottom);\n} else if (this.shape.type == 'circle') {\n    ct.draw.circle(this.x,this.y, this.shape.r);\n} else {\n    ct.draw.circle(this.x,this.y, 2);\n} ",
      "ondestroy": "",
      "uid": 2,
      "graph": -1
    }
  ],
  "sounds": [],
  "styles": [],
  "rooms": [
    {
      "name": "main",
      "oncreate": "this.shapes = [\n    {\n        type: \"circle\",\n        r: 150\n    },\n    {\n        type: \"circle\",\n        r: 50\n    },\n    {\n        type: \"circle\",\n        r: 15\n    },\n    {\n        type: \"point\",\n    },\n    {\n        type: \"rect\",\n        left: 5,\n        right: 5,\n        top: 5,\n        bottom: 5\n    },\n    {\n        type: \"rect\",\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20\n    },\n    {\n        type: \"rect\",\n        left: 50,\n        top: 10,\n        right: 50,\n        bottom: 10\n    },\n    {\n        type: \"rect\",\n        left: 20,\n        bottom: 40,\n        top: 40,\n        right: 20\n    },\n    {\n        type: \"rect\",\n        left: 50,\n        right: 50,\n        top: 50,\n        bottom: 50\n    }\n];",
      "onstep": "",
      "ondraw": "ct.x.fillStyle = '#000';\nct.draw.text(JSON.stringify(this.one.shape),10,20,false);\nct.draw.text(JSON.stringify(this.two.shape),10,40,false);",
      "onleave": "",
      "width": 640,
      "height": 480,
      "backgrounds": [],
      "layers": [
        {
          "depth": 0,
          "copies": [
            {
              "x": 192,
              "y": 177,
              "uid": 1
            },
            {
              "x": 351,
              "y": 241,
              "uid": 2
            },
            {
              "x": 64,
              "y": 344,
              "uid": 2
            },
            {
              "x": 498,
              "y": 359,
              "uid": 2
            }
          ]
        }
      ],
      "uid": 1
    }
  ],
  "graphtick": 0,
  "soundtick": 0,
  "roomtick": 1,
  "typetick": 2,
  "styletick": 0,
  "starting": 0,
  "settings": {
    "minifyhtmlcss": false,
    "minifyjs": false,
    "title": "place.ct testsafesrgdh",
    "author": "Cosmo Myzrail Gorynych",
    "site": "http://ctjs.ru"
  },
  "startroom": 1
}
